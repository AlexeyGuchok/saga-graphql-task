{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { graphql } from \"react-apollo\";\nimport compose from \"recompose/compose\";\nimport Button from \"@material-ui/core/Button\";\n\nclass updateProduct extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      color: \"\",\n      category: \"\",\n      createdBy: null\n    };\n  }\n\n  render() {\n    const updateProduct = () => {\n      const res = this.props.updateProductsQuery({\n        variables: {\n          id: this.props.id,\n          name: this.state.name,\n          category: this.state.category,\n          color: this.state.color,\n          createdBy: this.state.createdBy\n        },\n        refetchQueries: [{\n          query: getProductsQuery\n        }]\n      });\n    };\n\n    return __jsx(\"div\", null, __jsx(\"div\", null, __jsx(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u0438\\u043C\\u044F\",\n      onChange: e => this.setState({\n        name: e.target.value\n      })\n    })), __jsx(\"div\", null, __jsx(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u041D\\u043E\\u0432\\u0430\\u044F \\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\",\n      onChange: e => this.setState({\n        category: e.target.value\n      })\n    })), __jsx(\"div\", null, __jsx(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u0446\\u0432\\u0435\\u0442\",\n      onChange: e => this.setState({\n        color: e.target.value\n      })\n    })), __jsx(\"div\", null, __jsx(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0438\\u0442\\u0435\\u043B\\u044C\",\n      onChange: e => this.setState({\n        createdBy: Number(e.target.value)\n      })\n    })), __jsx(\"button\", {\n      onClick: updateProduct\n    }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"));\n  }\n\n}\n\nconst mapDispatchToProps = {\n  dispatchProductsAdd: productsAdd\n};\nexport default connect(null, mapDispatchToProps)(AddProduct);","map":{"version":3,"sources":["C:/Users/lu4ok/Desktop/Practice/DZ/nextjs-app/pages/updateProduct.js"],"names":["React","Component","graphql","compose","Button","updateProduct","constructor","props","state","name","color","category","createdBy","render","res","updateProductsQuery","variables","id","refetchQueries","query","getProductsQuery","e","setState","target","value","Number","mapDispatchToProps","dispatchProductsAdd","productsAdd","connect","AddProduct"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AACpCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,SAAS,EAAE;AAJA,KAAb;AAMD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAMR,aAAa,GAAG,MAAM;AAC1B,YAAMS,GAAG,GAAG,KAAKP,KAAL,CAAWQ,mBAAX,CAA+B;AACzCC,QAAAA,SAAS,EAAE;AACTC,UAAAA,EAAE,EAAE,KAAKV,KAAL,CAAWU,EADN;AAETR,UAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAFR;AAGTE,UAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG,QAHZ;AAITD,UAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAJT;AAKTE,UAAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWI;AALb,SAD8B;AAQzCM,QAAAA,cAAc,EAAE,CAAC;AAAEC,UAAAA,KAAK,EAAEC;AAAT,SAAD;AARyB,OAA/B,CAAZ;AAUD,KAXD;;AAaA,WACE,mBACE,mBACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,mDAFd;AAGE,MAAA,QAAQ,EAAGC,CAAD,IAAO,KAAKC,QAAL,CAAc;AAAEb,QAAAA,IAAI,EAAEY,CAAC,CAACE,MAAF,CAASC;AAAjB,OAAd;AAHnB,MADF,CADF,EAQE,mBACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,uFAFd;AAGE,MAAA,QAAQ,EAAGH,CAAD,IAAO,KAAKC,QAAL,CAAc;AAAEX,QAAAA,QAAQ,EAAEU,CAAC,CAACE,MAAF,CAASC;AAArB,OAAd;AAHnB,MADF,CARF,EAeE,mBACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,yDAFd;AAGE,MAAA,QAAQ,EAAGH,CAAD,IAAO,KAAKC,QAAL,CAAc;AAAEZ,QAAAA,KAAK,EAAEW,CAAC,CAACE,MAAF,CAASC;AAAlB,OAAd;AAHnB,MADF,CAfF,EAsBE,mBACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,+GAFd;AAGE,MAAA,QAAQ,EAAGH,CAAD,IACR,KAAKC,QAAL,CAAc;AAAEV,QAAAA,SAAS,EAAEa,MAAM,CAACJ,CAAC,CAACE,MAAF,CAASC,KAAV;AAAnB,OAAd;AAJJ,MADF,CAtBF,EA+BE;AAAQ,MAAA,OAAO,EAAEnB;AAAjB,gEA/BF,CADF;AAmCD;;AA3DmC;;AA8DtC,MAAMqB,kBAAkB,GAAG;AACzBC,EAAAA,mBAAmB,EAAEC;AADI,CAA3B;AAIA,eAAeC,OAAO,CAAC,IAAD,EAAOH,kBAAP,CAAP,CAAkCI,UAAlC,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { graphql } from \"react-apollo\";\r\nimport compose from \"recompose/compose\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass updateProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      color: \"\",\r\n      category: \"\",\r\n      createdBy: null,\r\n    };\r\n  }\r\n  render() {\r\n    const updateProduct = () => {\r\n      const res = this.props.updateProductsQuery({\r\n        variables: {\r\n          id: this.props.id,\r\n          name: this.state.name,\r\n          category: this.state.category,\r\n          color: this.state.color,\r\n          createdBy: this.state.createdBy,\r\n        },\r\n        refetchQueries: [{ query: getProductsQuery }],\r\n      });\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Новое имя\"\r\n            onChange={(e) => this.setState({ name: e.target.value })}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Новая Категория\"\r\n            onChange={(e) => this.setState({ category: e.target.value })}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Новый цвет\"\r\n            onChange={(e) => this.setState({ color: e.target.value })}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Новый производитель\"\r\n            onChange={(e) =>\r\n              this.setState({ createdBy: Number(e.target.value) })\r\n            }\r\n          />\r\n        </div>\r\n        <button onClick={updateProduct}>Сохранить</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  dispatchProductsAdd: productsAdd,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(AddProduct);\r\n"]},"metadata":{},"sourceType":"module"}