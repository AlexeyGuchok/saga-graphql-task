{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\";\nconst graphQLUrl = \"/graphql\";\n\nclass ProductsService {\n  constructor(url) {\n    _defineProperty(this, \"getProductsQuery\", async () => {\n      const data = await this.sender.post(\"\", {\n        query: `{\n            products {\n              id\n              model_name\n              model_color\n              model_category\n              createdBy {\n                id\n                name\n                age\n              }\n            }\n          }`\n      });\n      return data.data;\n    });\n\n    _defineProperty(this, \"deleteProductQuery\", async id => {\n      const name = \"deleteProduct\";\n      const data = await this.sender.post(\"\", {\n        query: `\n        mutation {\n          ${name}(id: ${id}) {\n            id\n          }\n      }\n    `\n      });\n      return data;\n    });\n\n    _defineProperty(this, \"addProductQuery\", async userData => {\n      const name = \"addProduct\";\n      const data = await this.sender.post(\"\", {\n        query: `\n        mutation {\n          ${name}(\n            name: \"${userData.name}\",\n            category: \"${userData.category}\",\n            color: \"${userData.color}\",\n            createdBy: \"${userData.createdBy}\",\n            ) {\n            id\n             model_name\n             model_category\n             model_color\n             createdBy {\n               id\n               age\n               name\n             }\n            }\n      }\n    `\n      });\n      return data;\n    });\n\n    _defineProperty(this, \"updatePoductQuery\", async userData => {\n      const name = \"updateProduct\";\n      console.log(userData);\n      const data = await this.sender.post(\"\", {\n        query: `\n         mutation {\n          ${name}\n  ) {\n    updateProduct(\n      id: \"${userData.id}\",\n      name: \"${userData.name}\",\n      category: \"${userData.category}\",\n      color: \"${userData.color}\"\n      createdBy: \"${userData.createdBy}\",\n    ) {\n      model_name\n      model_category\n      model_color\n      id\n    }\n  }\n    `\n      });\n      return data;\n    });\n\n    this.sender = axios.create({\n      baseURL: url,\n      withCredentials: true\n    });\n  }\n\n}\n\nexport default new ProductsService(graphQLUrl);","map":{"version":3,"sources":["C:/Users/lu4ok/Desktop/Practice/DZ/nextjs-app/services/products.js"],"names":["axios","graphQLUrl","ProductsService","constructor","url","data","sender","post","query","id","name","userData","category","color","createdBy","console","log","create","baseURL","withCredentials"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,UAAU,GAAG,UAAnB;;AAEA,MAAMC,eAAN,CAAsB;AACpBC,EAAAA,WAAW,CAACC,GAAD,EAAM;AAAA,8CAOE,YAAY;AAC7B,YAAMC,IAAI,GAAG,MAAM,KAAKC,MAAL,CAAYC,IAAZ,CAAiB,EAAjB,EAAqB;AACtCC,QAAAA,KAAK,EAAG;;;;;;;;;;;;;AAD8B,OAArB,CAAnB;AAeA,aAAOH,IAAI,CAACA,IAAZ;AACD,KAxBgB;;AAAA,gDA0BI,MAAOI,EAAP,IAAc;AACjC,YAAMC,IAAI,GAAG,eAAb;AACA,YAAML,IAAI,GAAG,MAAM,KAAKC,MAAL,CAAYC,IAAZ,CAAiB,EAAjB,EAAqB;AACtCC,QAAAA,KAAK,EAAG;;YAEFE,IAAK,QAAOD,EAAG;;;;;AAHiB,OAArB,CAAnB;AASA,aAAOJ,IAAP;AACD,KAtCgB;;AAAA,6CAwCC,MAAOM,QAAP,IAAoB;AACpC,YAAMD,IAAI,GAAG,YAAb;AACA,YAAML,IAAI,GAAG,MAAM,KAAKC,MAAL,CAAYC,IAAZ,CAAiB,EAAjB,EAAqB;AACtCC,QAAAA,KAAK,EAAG;;YAEFE,IAAK;qBACIC,QAAQ,CAACD,IAAK;yBACVC,QAAQ,CAACC,QAAS;sBACrBD,QAAQ,CAACE,KAAM;0BACXF,QAAQ,CAACG,SAAU;;;;;;;;;;;;;;AAPD,OAArB,CAAnB;AAsBA,aAAOT,IAAP;AACD,KAjEgB;;AAAA,+CAmEG,MAAOM,QAAP,IAAoB;AACtC,YAAMD,IAAI,GAAG,eAAb;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,YAAMN,IAAI,GAAG,MAAM,KAAKC,MAAL,CAAYC,IAAZ,CAAiB,EAAjB,EAAqB;AACtCC,QAAAA,KAAK,EAAG;;YAEFE,IAAK;;;aAGJC,QAAQ,CAACF,EAAG;eACVE,QAAQ,CAACD,IAAK;mBACVC,QAAQ,CAACC,QAAS;gBACrBD,QAAQ,CAACE,KAAM;oBACXF,QAAQ,CAACG,SAAU;;;;;;;;;AAVK,OAArB,CAAnB;AAoBA,aAAOT,IAAP;AACD,KA3FgB;;AACf,SAAKC,MAAL,GAAcN,KAAK,CAACiB,MAAN,CAAa;AACzBC,MAAAA,OAAO,EAAEd,GADgB;AAEzBe,MAAAA,eAAe,EAAE;AAFQ,KAAb,CAAd;AAID;;AANmB;;AA+FtB,eAAe,IAAIjB,eAAJ,CAAoBD,UAApB,CAAf","sourcesContent":["import axios from \"axios\";\r\nconst graphQLUrl = \"/graphql\";\r\n\r\nclass ProductsService {\r\n  constructor(url) {\r\n    this.sender = axios.create({\r\n      baseURL: url,\r\n      withCredentials: true,\r\n    });\r\n  }\r\n\r\n  getProductsQuery = async () => {\r\n    const data = await this.sender.post(\"\", {\r\n      query: `{\r\n            products {\r\n              id\r\n              model_name\r\n              model_color\r\n              model_category\r\n              createdBy {\r\n                id\r\n                name\r\n                age\r\n              }\r\n            }\r\n          }`,\r\n    });\r\n    return data.data;\r\n  };\r\n\r\n  deleteProductQuery = async (id) => {\r\n    const name = \"deleteProduct\";\r\n    const data = await this.sender.post(\"\", {\r\n      query: `\r\n        mutation {\r\n          ${name}(id: ${id}) {\r\n            id\r\n          }\r\n      }\r\n    `,\r\n    });\r\n    return data;\r\n  };\r\n\r\n  addProductQuery = async (userData) => {\r\n    const name = \"addProduct\";\r\n    const data = await this.sender.post(\"\", {\r\n      query: `\r\n        mutation {\r\n          ${name}(\r\n            name: \"${userData.name}\",\r\n            category: \"${userData.category}\",\r\n            color: \"${userData.color}\",\r\n            createdBy: \"${userData.createdBy}\",\r\n            ) {\r\n            id\r\n             model_name\r\n             model_category\r\n             model_color\r\n             createdBy {\r\n               id\r\n               age\r\n               name\r\n             }\r\n            }\r\n      }\r\n    `,\r\n    });\r\n    return data;\r\n  };\r\n\r\n  updatePoductQuery = async (userData) => {\r\n    const name = \"updateProduct\";\r\n    console.log(userData);\r\n    const data = await this.sender.post(\"\", {\r\n      query: `\r\n         mutation {\r\n          ${name}\r\n  ) {\r\n    updateProduct(\r\n      id: \"${userData.id}\",\r\n      name: \"${userData.name}\",\r\n      category: \"${userData.category}\",\r\n      color: \"${userData.color}\"\r\n      createdBy: \"${userData.createdBy}\",\r\n    ) {\r\n      model_name\r\n      model_category\r\n      model_color\r\n      id\r\n    }\r\n  }\r\n    `,\r\n    });\r\n    return data;\r\n  };\r\n}\r\n\r\nexport default new ProductsService(graphQLUrl);\r\n"]},"metadata":{},"sourceType":"module"}