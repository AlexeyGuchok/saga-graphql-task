{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component, useEffect, useState } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { graphql } from \"react-apollo\";\nimport compose from \"recompose/compose\";\nimport { getDealersQuery, addProductQuery } from \"../queries/queries\"; // class AddProduct extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       name: \"\",\n//       color: \"\",\n//       category: \"\",\n//       createdBy: \"\",\n//     };\n//   }\n//   render() {\n\nconst AddProduct = () => {\n  console.log(this.props);\n  return __jsx(\"div\", null, __jsx(\"h2\", null, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442\"), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043C\\u044F\",\n    onChange: e => this.setState({\n      name: e.target.value\n    })\n  }), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\",\n    onChange: e => this.setState({\n      category: e.target.value\n    })\n  }), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"\\u0426\\u0432\\u0435\\u0442\",\n    onChange: e => this.setState({\n      color: e.target.value\n    })\n  }), __jsx(\"select\", {\n    onChange: e => this.setState({\n      createdBy: e.target.value\n    })\n  }, !this.props.getDealersQuery.loading && this.props.getDealersQuery.dealers.map(element => {\n    return __jsx(\"option\", null, element.name);\n  })), __jsx(\"button\", {\n    onClick: () => console.log(this.state)\n  }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\"));\n};\n\nexport default compose(graphql(getDealersQuery, {\n  name: \"getDealersQuery\"\n}), graphql(addProductQuery, {\n  name: \"addProductQuery\"\n}))(AddProduct);","map":{"version":3,"sources":["C:/Users/lu4ok/Desktop/Practice/DZ/nextjs-app/pages/addProduct.js"],"names":["React","Component","useEffect","useState","gql","graphql","compose","getDealersQuery","addProductQuery","AddProduct","console","log","props","e","setState","name","target","value","category","color","createdBy","loading","dealers","map","element","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,eAAT,EAA0BC,eAA1B,QAAiD,oBAAjD,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,SACE,mBACE,gHADF,EAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,+DAFd;AAGE,IAAA,QAAQ,EAAGC,CAAD,IAAO,KAAKC,QAAL,CAAc;AAAEC,MAAAA,IAAI,EAAEF,CAAC,CAACG,MAAF,CAASC;AAAjB,KAAd;AAHnB,IAFF,EAOE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,wDAFd;AAGE,IAAA,QAAQ,EAAGJ,CAAD,IAAO,KAAKC,QAAL,CAAc;AAAEI,MAAAA,QAAQ,EAAEL,CAAC,CAACG,MAAF,CAASC;AAArB,KAAd;AAHnB,IAPF,EAYE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,0BAFd;AAGE,IAAA,QAAQ,EAAGJ,CAAD,IAAO,KAAKC,QAAL,CAAc;AAAEK,MAAAA,KAAK,EAAEN,CAAC,CAACG,MAAF,CAASC;AAAlB,KAAd;AAHnB,IAZF,EAiBE;AAAQ,IAAA,QAAQ,EAAGJ,CAAD,IAAO,KAAKC,QAAL,CAAc;AAAEM,MAAAA,SAAS,EAAEP,CAAC,CAACG,MAAF,CAASC;AAAtB,KAAd;AAAzB,KACG,CAAC,KAAKL,KAAL,CAAWL,eAAX,CAA2Bc,OAA5B,IACC,KAAKT,KAAL,CAAWL,eAAX,CAA2Be,OAA3B,CAAmCC,GAAnC,CAAwCC,OAAD,IAAa;AAClD,WAAO,sBAASA,OAAO,CAACT,IAAjB,CAAP;AACD,GAFD,CAFJ,CAjBF,EAuBE;AAAQ,IAAA,OAAO,EAAE,MAAML,OAAO,CAACC,GAAR,CAAY,KAAKc,KAAjB;AAAvB,kDAvBF,CADF;AA2BD,CA7BD;;AA+BA,eAAenB,OAAO,CACpBD,OAAO,CAACE,eAAD,EAAkB;AAAEQ,EAAAA,IAAI,EAAE;AAAR,CAAlB,CADa,EAEpBV,OAAO,CAACG,eAAD,EAAkB;AAAEO,EAAAA,IAAI,EAAE;AAAR,CAAlB,CAFa,CAAP,CAGbN,UAHa,CAAf","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { graphql } from \"react-apollo\";\r\nimport compose from \"recompose/compose\";\r\nimport { getDealersQuery, addProductQuery } from \"../queries/queries\";\r\n\r\n// class AddProduct extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       name: \"\",\r\n//       color: \"\",\r\n//       category: \"\",\r\n//       createdBy: \"\",\r\n//     };\r\n//   }\r\n//   render() {\r\n\r\nconst AddProduct = () => {\r\n  console.log(this.props);\r\n  return (\r\n    <div>\r\n      <h2>Добавить продукт</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Введите имя\"\r\n        onChange={(e) => this.setState({ name: e.target.value })}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Категория\"\r\n        onChange={(e) => this.setState({ category: e.target.value })}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Цвет\"\r\n        onChange={(e) => this.setState({ color: e.target.value })}\r\n      />\r\n      <select onChange={(e) => this.setState({ createdBy: e.target.value })}>\r\n        {!this.props.getDealersQuery.loading &&\r\n          this.props.getDealersQuery.dealers.map((element) => {\r\n            return <option>{element.name}</option>;\r\n          })}\r\n      </select>\r\n      <button onClick={() => console.log(this.state)}>Создать</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default compose(\r\n  graphql(getDealersQuery, { name: \"getDealersQuery\" }),\r\n  graphql(addProductQuery, { name: \"addProductQuery\" })\r\n)(AddProduct);\r\n"]},"metadata":{},"sourceType":"module"}