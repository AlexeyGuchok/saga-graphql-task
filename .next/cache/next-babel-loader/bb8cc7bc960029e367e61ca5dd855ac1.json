{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\";\nconst graphQLUrl = \"/graphql\";\n\nclass ProductsService {\n  constructor(url) {\n    _defineProperty(this, \"getProductsQuery\", async () => {\n      const data = await this.sender.post(\"\", {\n        query: `{\n            products {\n              id\n              model_name\n              model_color\n              model_category\n              createdBy {\n                id\n              }\n            }\n          }`\n      });\n      return data.data;\n    });\n\n    _defineProperty(this, \"deleteProductQuery\", async id => {\n      const name = \"deleteProduct\";\n      const data = await this.sender.post(\"\", {\n        query: `\n        mutation {\n          ${name}(id: ${id}) {\n            id\n          }\n      }\n    `\n      });\n      return data;\n    });\n\n    this.sender = axios.create({\n      baseURL: url,\n      withCredentials: true\n    });\n  } //   registerByEmail = async ({ email, password }) => {\n  //     const name = \"userCreateEmail\";\n  //     const res = await this.sender.post(\"\", {\n  //       query: `mutation {\n  //         ${name} (email: \"${email}\", password: \"${password}\")\n  //       }`,\n  //     });\n  //     return {\n  //       email,\n  //     };\n  //   };\n  //   loginByEmail = async ({ email, password }) => {\n  //     const name = \"loginUserByEmail\";\n  //     const res = await this.sender.post(\"\", {\n  //       query: `{ ${name}(email: \"${email}\", password: \"${password}\") }`,\n  //     });\n  //     return {\n  //       email,\n  //     };\n  //   };\n\n\n}\n\nexport default new ProductsService(graphQLUrl);","map":{"version":3,"sources":["C:/Users/lu4ok/Desktop/Practice/DZ/nextjs-app/services/products.js"],"names":["axios","graphQLUrl","ProductsService","constructor","url","data","sender","post","query","id","name","create","baseURL","withCredentials"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,UAAU,GAAG,UAAnB;;AAEA,MAAMC,eAAN,CAAsB;AACpBC,EAAAA,WAAW,CAACC,GAAD,EAAM;AAAA,8CAOE,YAAY;AAC7B,YAAMC,IAAI,GAAG,MAAM,KAAKC,MAAL,CAAYC,IAAZ,CAAiB,EAAjB,EAAqB;AACtCC,QAAAA,KAAK,EAAG;;;;;;;;;;;AAD8B,OAArB,CAAnB;AAaA,aAAOH,IAAI,CAACA,IAAZ;AACD,KAtBgB;;AAAA,gDAwBI,MAAOI,EAAP,IAAc;AACjC,YAAMC,IAAI,GAAG,eAAb;AACA,YAAML,IAAI,GAAG,MAAM,KAAKC,MAAL,CAAYC,IAAZ,CAAiB,EAAjB,EAAqB;AACtCC,QAAAA,KAAK,EAAG;;YAEFE,IAAK,QAAOD,EAAG;;;;;AAHiB,OAArB,CAAnB;AASA,aAAOJ,IAAP;AACD,KApCgB;;AACf,SAAKC,MAAL,GAAcN,KAAK,CAACW,MAAN,CAAa;AACzBC,MAAAA,OAAO,EAAER,GADgB;AAEzBS,MAAAA,eAAe,EAAE;AAFQ,KAAb,CAAd;AAID,GANmB,CA0CpB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAjEoB;;AAoEtB,eAAe,IAAIX,eAAJ,CAAoBD,UAApB,CAAf","sourcesContent":["import axios from \"axios\";\r\nconst graphQLUrl = \"/graphql\";\r\n\r\nclass ProductsService {\r\n  constructor(url) {\r\n    this.sender = axios.create({\r\n      baseURL: url,\r\n      withCredentials: true,\r\n    });\r\n  }\r\n\r\n  getProductsQuery = async () => {\r\n    const data = await this.sender.post(\"\", {\r\n      query: `{\r\n            products {\r\n              id\r\n              model_name\r\n              model_color\r\n              model_category\r\n              createdBy {\r\n                id\r\n              }\r\n            }\r\n          }`,\r\n    });\r\n    return data.data;\r\n  };\r\n\r\n  deleteProductQuery = async (id) => {\r\n    const name = \"deleteProduct\";\r\n    const data = await this.sender.post(\"\", {\r\n      query: `\r\n        mutation {\r\n          ${name}(id: ${id}) {\r\n            id\r\n          }\r\n      }\r\n    `,\r\n    });\r\n    return data;\r\n  };\r\n\r\n\r\n\r\n  \r\n  //   registerByEmail = async ({ email, password }) => {\r\n  //     const name = \"userCreateEmail\";\r\n  //     const res = await this.sender.post(\"\", {\r\n  //       query: `mutation {\r\n  //         ${name} (email: \"${email}\", password: \"${password}\")\r\n  //       }`,\r\n  //     });\r\n\r\n  //     return {\r\n  //       email,\r\n  //     };\r\n  //   };\r\n\r\n  //   loginByEmail = async ({ email, password }) => {\r\n  //     const name = \"loginUserByEmail\";\r\n\r\n  //     const res = await this.sender.post(\"\", {\r\n  //       query: `{ ${name}(email: \"${email}\", password: \"${password}\") }`,\r\n  //     });\r\n\r\n  //     return {\r\n  //       email,\r\n  //     };\r\n  //   };\r\n}\r\n\r\nexport default new ProductsService(graphQLUrl);\r\n"]},"metadata":{},"sourceType":"module"}