{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { graphql } from \"react-apollo\";\nimport compose from \"recompose/compose\";\nimport { getProductsQuery, updateProductsQuery } from \"../queries/queries\";\nimport Button from \"@material-ui/core/Button\";\n\nclass updateProduct extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      color: \"\",\n      category: \"\",\n      createdBy: \"\"\n    };\n  }\n\n  render() {\n    const updateProduct = () => {\n      this.setState(); //   this.props.updateProductsQuery({\n      //     variables: {\n      //       id: this.props.userData.createdBy.id,\n      //       name: this.state.name,\n      //       category: this.state.category,\n      //       color: this.state.color,\n      //       createdBy: +this.state.createdBy,\n      //     },\n      //     refetchQueries: [{ query: updateProductsQuery }],\n      //   });\n    };\n\n    return __jsx(\"div\", null, __jsx(\"div\", null, __jsx(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u0438\\u043C\\u044F\",\n      onChange: e => this.setState({\n        name: e.target.value\n      })\n    })), __jsx(\"div\", null, __jsx(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u041D\\u043E\\u0432\\u0430\\u044F \\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\",\n      onChange: e => this.setState({\n        color: e.target.value\n      })\n    })), __jsx(\"div\", null, __jsx(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u0446\\u0432\\u0435\\u0442\",\n      onChange: e => this.setState({\n        createdBy: e.target.value\n      })\n    })), __jsx(\"div\", null, __jsx(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0438\\u0442\\u0435\\u043B\\u044C\",\n      onChange: e => this.setState({\n        category: Number(e.target.value)\n      })\n    })), __jsx(\"button\", {\n      onClick: updateProduct\n    }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"));\n  }\n\n}\n\nexport default compose(graphql(getProductsQuery, {\n  name: \"getDealersQuery\"\n}), graphql(updateProductsQuery, {\n  name: \"updateProductsQuery\"\n}))(updateProduct);","map":{"version":3,"sources":["C:/Users/lu4ok/Desktop/Practice/DZ/nextjs-app/pages/updateProduct.js"],"names":["React","Component","graphql","compose","getProductsQuery","updateProductsQuery","Button","updateProduct","constructor","props","state","name","color","category","createdBy","render","setState","e","target","value","Number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,QAAsD,oBAAtD;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,aAAN,SAA4BN,SAA5B,CAAsC;AACpCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,SAAS,EAAE;AAJA,KAAb;AAMD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAMR,aAAa,GAAG,MAAM;AACxB,WAAKS,QAAL,GADwB,CAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,KAZD;;AAcA,WACE,mBACE,mBACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,mDAFd;AAGE,MAAA,QAAQ,EAAGC,CAAD,IAAO,KAAKD,QAAL,CAAc;AAAEL,QAAAA,IAAI,EAAEM,CAAC,CAACC,MAAF,CAASC;AAAjB,OAAd;AAHnB,MADF,CADF,EAQE,mBACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,uFAFd;AAGE,MAAA,QAAQ,EAAGF,CAAD,IAAO,KAAKD,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAEK,CAAC,CAACC,MAAF,CAASC;AAAlB,OAAd;AAHnB,MADF,CARF,EAeE,mBACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,yDAFd;AAGE,MAAA,QAAQ,EAAGF,CAAD,IAAO,KAAKD,QAAL,CAAc;AAAEF,QAAAA,SAAS,EAAEG,CAAC,CAACC,MAAF,CAASC;AAAtB,OAAd;AAHnB,MADF,CAfF,EAsBE,mBACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,+GAFd;AAGE,MAAA,QAAQ,EAAGF,CAAD,IACR,KAAKD,QAAL,CAAc;AAAEH,QAAAA,QAAQ,EAAEO,MAAM,CAACH,CAAC,CAACC,MAAF,CAASC,KAAV;AAAlB,OAAd;AAJJ,MADF,CAtBF,EA+BE;AAAQ,MAAA,OAAO,EAAEZ;AAAjB,gEA/BF,CADF;AAmCD;;AA5DmC;;AA+DtC,eAAeJ,OAAO,CACpBD,OAAO,CAACE,gBAAD,EAAmB;AAAEO,EAAAA,IAAI,EAAE;AAAR,CAAnB,CADa,EAEpBT,OAAO,CAACG,mBAAD,EAAsB;AAAEM,EAAAA,IAAI,EAAE;AAAR,CAAtB,CAFa,CAAP,CAGbJ,aAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { graphql } from \"react-apollo\";\r\nimport compose from \"recompose/compose\";\r\nimport { getProductsQuery, updateProductsQuery } from \"../queries/queries\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass updateProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      color: \"\",\r\n      category: \"\",\r\n      createdBy: \"\",\r\n    };\r\n  }\r\n  render() {\r\n    const updateProduct = () => {\r\n        this.setState()\r\n    //   this.props.updateProductsQuery({\r\n    //     variables: {\r\n    //       id: this.props.userData.createdBy.id,\r\n    //       name: this.state.name,\r\n    //       category: this.state.category,\r\n    //       color: this.state.color,\r\n    //       createdBy: +this.state.createdBy,\r\n    //     },\r\n    //     refetchQueries: [{ query: updateProductsQuery }],\r\n    //   });\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Новое имя\"\r\n            onChange={(e) => this.setState({ name: e.target.value })}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Новая Категория\"\r\n            onChange={(e) => this.setState({ color: e.target.value })}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Новый цвет\"\r\n            onChange={(e) => this.setState({ createdBy: e.target.value })}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Новый производитель\"\r\n            onChange={(e) =>\r\n              this.setState({ category: Number(e.target.value) })\r\n            }\r\n          />\r\n        </div>\r\n        <button onClick={updateProduct}>Сохранить</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  graphql(getProductsQuery, { name: \"getDealersQuery\" }),\r\n  graphql(updateProductsQuery, { name: \"updateProductsQuery\" })\r\n)(updateProduct);\r\n"]},"metadata":{},"sourceType":"module"}