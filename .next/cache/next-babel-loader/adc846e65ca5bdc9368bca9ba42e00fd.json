{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useEffect, useState } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { graphql } from \"react-apollo\";\nimport compose from \"recompose/compose\";\nimport { getDealersQuery, addProductQuery } from \"../queries/queries\";\n\nvar AddProduct = /*#__PURE__*/function (_Component) {\n  _inherits(AddProduct, _Component);\n\n  var _super = _createSuper(AddProduct);\n\n  function AddProduct(props) {\n    var _this;\n\n    _classCallCheck(this, AddProduct);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      name: \"\",\n      color: \"\",\n      category: \"\",\n      createdBy: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(AddProduct, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var createNewProductBtn = function createNewProductBtn(e) {\n        addProductQuery({\n          variables: {\n            name: _this2.state.name\n          }\n        });\n      };\n\n      return __jsx(\"div\", null, __jsx(\"h2\", null, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442\"), __jsx(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043C\\u044F\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            name: e.target.value\n          });\n        }\n      }), __jsx(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            category: e.target.value\n          });\n        }\n      }), __jsx(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u0426\\u0432\\u0435\\u0442\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            color: e.target.value\n          });\n        }\n      }), __jsx(\"select\", {\n        onChange: function onChange(e) {\n          return _this2.setState({\n            createdBy: e.target.value\n          });\n        }\n      }, !this.props.getDealersQuery.loading && this.props.getDealersQuery.dealers.map(function (element) {\n        return __jsx(\"option\", {\n          value: element.id\n        }, element.name);\n      })), __jsx(\"button\", {\n        onClick: createNewProductBtn\n      }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\"));\n    }\n  }]);\n\n  return AddProduct;\n}(Component);\n\nexport default compose(graphql(getDealersQuery, {\n  name: \"getDealersQuery\"\n}), graphql(addProductQuery, {\n  name: \"addProductQuery\"\n}))(AddProduct);","map":{"version":3,"sources":["C:/Users/lu4ok/Desktop/Practice/DZ/nextjs-app/pages/addProduct.js"],"names":["React","Component","useEffect","useState","gql","graphql","compose","getDealersQuery","addProductQuery","AddProduct","props","state","name","color","category","createdBy","createNewProductBtn","e","variables","setState","target","value","loading","dealers","map","element","id"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,eAAT,EAA0BC,eAA1B,QAAiD,oBAAjD;;IAEMC,U;;;;;AACJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,SAAS,EAAE;AAJA,KAAb;AAFiB;AAQlB;;;;6BAEQ;AAAA;;AACP,UAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,CAAD,EAAO;AACjCT,QAAAA,eAAe,CAAC;AACZU,UAAAA,SAAS,EAAE;AACPN,YAAAA,IAAI,EAAE,MAAI,CAACD,KAAL,CAAWC;AADV;AADC,SAAD,CAAf;AAMD,OAPD;;AAQA,aACE,mBACE,gHADF,EAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,+DAFd;AAGE,QAAA,QAAQ,EAAE,kBAACK,CAAD;AAAA,iBAAO,MAAI,CAACE,QAAL,CAAc;AAAEP,YAAAA,IAAI,EAAEK,CAAC,CAACG,MAAF,CAASC;AAAjB,WAAd,CAAP;AAAA;AAHZ,QAFF,EAOE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,wDAFd;AAGE,QAAA,QAAQ,EAAE,kBAACJ,CAAD;AAAA,iBAAO,MAAI,CAACE,QAAL,CAAc;AAAEL,YAAAA,QAAQ,EAAEG,CAAC,CAACG,MAAF,CAASC;AAArB,WAAd,CAAP;AAAA;AAHZ,QAPF,EAYE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,0BAFd;AAGE,QAAA,QAAQ,EAAE,kBAACJ,CAAD;AAAA,iBAAO,MAAI,CAACE,QAAL,CAAc;AAAEN,YAAAA,KAAK,EAAEI,CAAC,CAACG,MAAF,CAASC;AAAlB,WAAd,CAAP;AAAA;AAHZ,QAZF,EAiBE;AAAQ,QAAA,QAAQ,EAAE,kBAACJ,CAAD;AAAA,iBAAO,MAAI,CAACE,QAAL,CAAc;AAAEJ,YAAAA,SAAS,EAAEE,CAAC,CAACG,MAAF,CAASC;AAAtB,WAAd,CAAP;AAAA;AAAlB,SACG,CAAC,KAAKX,KAAL,CAAWH,eAAX,CAA2Be,OAA5B,IACC,KAAKZ,KAAL,CAAWH,eAAX,CAA2BgB,OAA3B,CAAmCC,GAAnC,CAAuC,UAACC,OAAD,EAAa;AAClD,eAAO;AAAQ,UAAA,KAAK,EAAEA,OAAO,CAACC;AAAvB,WAA4BD,OAAO,CAACb,IAApC,CAAP;AACD,OAFD,CAFJ,CAjBF,EAuBE;AAAQ,QAAA,OAAO,EAAEI;AAAjB,sDAvBF,CADF;AA2BD;;;;EA/CsBf,S;;AAkDzB,eAAeK,OAAO,CACpBD,OAAO,CAACE,eAAD,EAAkB;AAAEK,EAAAA,IAAI,EAAE;AAAR,CAAlB,CADa,EAEpBP,OAAO,CAACG,eAAD,EAAkB;AAAEI,EAAAA,IAAI,EAAE;AAAR,CAAlB,CAFa,CAAP,CAGbH,UAHa,CAAf","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { graphql } from \"react-apollo\";\r\nimport compose from \"recompose/compose\";\r\nimport { getDealersQuery, addProductQuery } from \"../queries/queries\";\r\n\r\nclass AddProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      color: \"\",\r\n      category: \"\",\r\n      createdBy: \"\",\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const createNewProductBtn = (e) => {\r\n      addProductQuery({\r\n          variables: {\r\n              name: this.state.name,\r\n              \r\n          }\r\n      })\r\n    };\r\n    return (\r\n      <div>\r\n        <h2>Добавить продукт</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Введите имя\"\r\n          onChange={(e) => this.setState({ name: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Категория\"\r\n          onChange={(e) => this.setState({ category: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Цвет\"\r\n          onChange={(e) => this.setState({ color: e.target.value })}\r\n        />\r\n        <select onChange={(e) => this.setState({ createdBy: e.target.value })}>\r\n          {!this.props.getDealersQuery.loading &&\r\n            this.props.getDealersQuery.dealers.map((element) => {\r\n              return <option value={element.id}>{element.name}</option>;\r\n            })}\r\n        </select>\r\n        <button onClick={createNewProductBtn}>Создать</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  graphql(getDealersQuery, { name: \"getDealersQuery\" }),\r\n  graphql(addProductQuery, { name: \"addProductQuery\" })\r\n)(AddProduct);\r\n"]},"metadata":{},"sourceType":"module"}