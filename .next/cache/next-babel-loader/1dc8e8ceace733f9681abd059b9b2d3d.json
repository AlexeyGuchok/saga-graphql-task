{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { rootReducer } from \"./rootReducer\";\n\nvar bindMiddleware = function bindMiddleware(middleware) {\n  if (true) {\n    // eslint-disable-next-line global-require,import/no-extraneous-dependencies\n    var _require = require(\"redux-devtools-extension\"),\n        composeWithDevTools = _require.composeWithDevTools;\n\n    return composeWithDevTools(applyMiddleware.apply(void 0, _toConsumableArray(middleware)));\n  }\n\n  return applyMiddleware.apply(void 0, _toConsumableArray(middleware));\n};\n\nexport var makeStore = function makeStore(preloadedState, ctx) {\n  var isServer = ctx.isServer,\n      _ctx$req = ctx.req,\n      req = _ctx$req === void 0 ? null : _ctx$req;\n  var sagaMiddleware = createSagaMiddleware();\n  var store = createStore(rootReducer, preloadedState, bindMiddleware([sagaMiddleware]));\n\n  if (req || !isServer) {\n    store.sagaTask = sagaMiddleware.run(rootSaga);\n  }\n\n  return store;\n};","map":{"version":3,"sources":["C:/Users/lu4ok/Desktop/Practice/DZ/nextjs-app/redux/index.js"],"names":["applyMiddleware","createStore","createSagaMiddleware","rootReducer","bindMiddleware","middleware","require","composeWithDevTools","makeStore","preloadedState","ctx","isServer","req","sagaMiddleware","store","sagaTask","run","rootSaga"],"mappings":";AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,UAAD,EAAgB;AACrC,YAA2C;AACzC;AADyC,mBAETC,OAAO,CAAC,0BAAD,CAFE;AAAA,QAEjCC,mBAFiC,YAEjCA,mBAFiC;;AAGzC,WAAOA,mBAAmB,CAACP,eAAe,MAAf,4BAAmBK,UAAnB,EAAD,CAA1B;AACD;;AACD,SAAOL,eAAe,MAAf,4BAAmBK,UAAnB,EAAP;AACD,CAPD;;AASA,OAAO,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAACC,cAAD,EAAiBC,GAAjB,EAAyB;AAAA,MACxCC,QADwC,GACfD,GADe,CACxCC,QADwC;AAAA,iBACfD,GADe,CAC9BE,GAD8B;AAAA,MAC9BA,GAD8B,yBACxB,IADwB;AAGhD,MAAMC,cAAc,GAAGX,oBAAoB,EAA3C;AAEA,MAAMY,KAAK,GAAGb,WAAW,CACvBE,WADuB,EAEvBM,cAFuB,EAGvBL,cAAc,CAAC,CAACS,cAAD,CAAD,CAHS,CAAzB;;AAMA,MAAID,GAAG,IAAI,CAACD,QAAZ,EAAsB;AACpBG,IAAAA,KAAK,CAACC,QAAN,GAAiBF,cAAc,CAACG,GAAf,CAAmBC,QAAnB,CAAjB;AACD;;AAED,SAAOH,KAAP;AACD,CAhBM","sourcesContent":["import { applyMiddleware, createStore } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { rootReducer } from \"./rootReducer\";\r\n\r\nconst bindMiddleware = (middleware) => {\r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    // eslint-disable-next-line global-require,import/no-extraneous-dependencies\r\n    const { composeWithDevTools } = require(\"redux-devtools-extension\");\r\n    return composeWithDevTools(applyMiddleware(...middleware));\r\n  }\r\n  return applyMiddleware(...middleware);\r\n};\r\n\r\nexport const makeStore = (preloadedState, ctx) => {\r\n  const { isServer, req = null } = ctx;\r\n\r\n  const sagaMiddleware = createSagaMiddleware();\r\n\r\n  const store = createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    bindMiddleware([sagaMiddleware])\r\n  );\r\n\r\n  if (req || !isServer) {\r\n    store.sagaTask = sagaMiddleware.run(rootSaga);\r\n  }\r\n\r\n  return store;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}