{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { makeStore } from \"../\";\nimport withRedux from \"next-redux-wrapper\";\nimport withReduxSaga from \"next-redux-saga\";\nimport App from \"next/app\";\nimport { ApolloProvider } from \"react-apollo\";\nimport ApolloClient from \"apollo-boost\";\nconst client = new ApolloClient({\n  uri: \"http://localhost:4001/graphql\"\n});\n\nclass WrappedApp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      loaded: false\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      loaded: true\n    });\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(Provider, {\n      store: store\n    }, __jsx(ApolloProvider, {\n      client: client\n    }, __jsx(\"div\", {\n      className: this.state.loaded ? \"full-height\" : \"load\"\n    }, __jsx(Component, pageProps))));\n  }\n\n}\n\n_defineProperty(WrappedApp, \"getInitialProps\", async ({\n  Component,\n  ctx\n}) => {\n  const pageProps = _objectSpread({}, Component.getInitialProps ? await Component.getInitialProps(ctx) : {});\n\n  return {\n    pageProps\n  };\n});\n\nexport default withRedux(makeStore)(withReduxSaga(WrappedApp)); // export default wrapper.withRedux(WrappedApp);","map":{"version":3,"sources":["C:/Users/lu4ok/Desktop/Practice/DZ/nextjs-app/pages/_app.js"],"names":["React","Provider","makeStore","withRedux","withReduxSaga","App","ApolloProvider","ApolloClient","client","uri","WrappedApp","loaded","componentDidMount","setState","render","Component","pageProps","store","props","state","ctx","getInitialProps"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,SAAT,QAA0B,KAA1B;AAEA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,YAAP,MAAyB,cAAzB;AAEA,MAAMC,MAAM,GAAG,IAAID,YAAJ,CAAiB;AAC9BE,EAAAA,GAAG,EAAE;AADyB,CAAjB,CAAf;;AAIA,MAAMC,UAAN,SAAyBL,GAAzB,CAA6B;AAAA;AAAA;;AAAA,mCAanB;AACNM,MAAAA,MAAM,EAAE;AADF,KAbmB;AAAA;;AAiB3BC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,CAAc;AACZF,MAAAA,MAAM,EAAE;AADI,KAAd;AAGD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBC,MAAAA;AAAxB,QAAkC,KAAKC,KAA7C;AAEA,WACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAED;AAAjB,OACE,MAAC,cAAD;AAAgB,MAAA,MAAM,EAAET;AAAxB,OACE;AAAK,MAAA,SAAS,EAAE,KAAKW,KAAL,CAAWR,MAAX,GAAoB,aAApB,GAAoC;AAApD,OACE,MAAC,SAAD,EAAeK,SAAf,CADF,CADF,CADF,CADF;AASD;;AAnC0B;;gBAAvBN,U,qBACqB,OAAO;AAAEK,EAAAA,SAAF;AAAaK,EAAAA;AAAb,CAAP,KAA8B;AACrD,QAAMJ,SAAS,qBACTD,SAAS,CAACM,eAAV,GACA,MAAMN,SAAS,CAACM,eAAV,CAA0BD,GAA1B,CADN,GAEA,EAHS,CAAf;;AAMA,SAAO;AACLJ,IAAAA;AADK,GAAP;AAGD,C;;AA2BH,eAAeb,SAAS,CAACD,SAAD,CAAT,CAAqBE,aAAa,CAACM,UAAD,CAAlC,CAAf,C,CAEA","sourcesContent":["import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { makeStore } from \"../\";\r\n\r\nimport withRedux from \"next-redux-wrapper\";\r\nimport withReduxSaga from \"next-redux-saga\";\r\nimport App from \"next/app\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport ApolloClient from \"apollo-boost\";\r\n\r\nconst client = new ApolloClient({\r\n  uri: \"http://localhost:4001/graphql\",\r\n});\r\n\r\nclass WrappedApp extends App {\r\n  static getInitialProps = async ({ Component, ctx }) => {\r\n    const pageProps = {\r\n      ...(Component.getInitialProps\r\n        ? await Component.getInitialProps(ctx)\r\n        : {}),\r\n    };\r\n\r\n    return {\r\n      pageProps,\r\n    };\r\n  };\r\n\r\n  state = {\r\n    loaded: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      loaded: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { Component, pageProps, store } = this.props;\r\n\r\n    return (\r\n      <Provider store={store}>\r\n        <ApolloProvider client={client}>\r\n          <div className={this.state.loaded ? \"full-height\" : \"load\"}>\r\n            <Component {...pageProps} />\r\n          </div>\r\n        </ApolloProvider>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRedux(makeStore)(withReduxSaga(WrappedApp));\r\n\r\n// export default wrapper.withRedux(WrappedApp);\r\n"]},"metadata":{},"sourceType":"module"}