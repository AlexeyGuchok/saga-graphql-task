{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, useEffect, useState } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { graphql } from \"react-apollo\";\nimport compose from \"recompose/compose\";\nimport { getDealersQuery, addProductQuery } from \"../queries/queries\";\n\nclass AddProduct extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"createNewProductBtn\", e => {\n      console.log(this.state);\n    });\n\n    this.state = {\n      name: \"\",\n      color: \"\",\n      category: \"\",\n      createdBy: \"\"\n    };\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(\"h2\", null, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442\"), __jsx(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043C\\u044F\",\n      onChange: e => this.setState({\n        name: e.target.value\n      })\n    }), __jsx(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\",\n      onChange: e => this.setState({\n        category: e.target.value\n      })\n    }), __jsx(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u0426\\u0432\\u0435\\u0442\",\n      onChange: e => this.setState({\n        color: e.target.value\n      })\n    }), __jsx(\"select\", {\n      onChange: e => this.setState({\n        createdBy: e.target.value\n      })\n    }, !this.props.getDealersQuery.loading && this.props.getDealersQuery.dealers.map(element => {\n      return __jsx(\"option\", {\n        value: element.id\n      }, element.name);\n    })), __jsx(\"button\", {\n      onClick: createNewProductBtn\n    }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\"));\n  }\n\n}\n\nexport default compose(graphql(getDealersQuery, {\n  name: \"getDealersQuery\"\n}), graphql(addProductQuery, {\n  name: \"addProductQuery\"\n}))(AddProduct);","map":{"version":3,"sources":["C:/Users/lu4ok/Desktop/Practice/DZ/nextjs-app/pages/addProduct.js"],"names":["React","Component","useEffect","useState","gql","graphql","compose","getDealersQuery","addProductQuery","AddProduct","constructor","props","e","console","log","state","name","color","category","createdBy","render","setState","target","value","loading","dealers","map","element","id","createNewProductBtn"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,eAAT,EAA0BC,eAA1B,QAAiD,oBAAjD;;AAEA,MAAMC,UAAN,SAAyBR,SAAzB,CAAmC;AACjCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,iDASIC,CAAD,IAAO;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACD,KAXkB;;AAEjB,SAAKA,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,SAAS,EAAE;AAJA,KAAb;AAMD;;AAIDC,EAAAA,MAAM,GAAG;AACP,WACE,mBACE,gHADF,EAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,+DAFd;AAGE,MAAA,QAAQ,EAAGR,CAAD,IAAO,KAAKS,QAAL,CAAc;AAAEL,QAAAA,IAAI,EAAEJ,CAAC,CAACU,MAAF,CAASC;AAAjB,OAAd;AAHnB,MAFF,EAOE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,wDAFd;AAGE,MAAA,QAAQ,EAAGX,CAAD,IAAO,KAAKS,QAAL,CAAc;AAAEH,QAAAA,QAAQ,EAAEN,CAAC,CAACU,MAAF,CAASC;AAArB,OAAd;AAHnB,MAPF,EAYE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,0BAFd;AAGE,MAAA,QAAQ,EAAGX,CAAD,IAAO,KAAKS,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAEL,CAAC,CAACU,MAAF,CAASC;AAAlB,OAAd;AAHnB,MAZF,EAiBE;AAAQ,MAAA,QAAQ,EAAGX,CAAD,IAAO,KAAKS,QAAL,CAAc;AAAEF,QAAAA,SAAS,EAAEP,CAAC,CAACU,MAAF,CAASC;AAAtB,OAAd;AAAzB,OACG,CAAC,KAAKZ,KAAL,CAAWJ,eAAX,CAA2BiB,OAA5B,IACC,KAAKb,KAAL,CAAWJ,eAAX,CAA2BkB,OAA3B,CAAmCC,GAAnC,CAAwCC,OAAD,IAAa;AAClD,aAAO;AAAQ,QAAA,KAAK,EAAEA,OAAO,CAACC;AAAvB,SAA4BD,OAAO,CAACX,IAApC,CAAP;AACD,KAFD,CAFJ,CAjBF,EAuBE;AAAQ,MAAA,OAAO,EAAEa;AAAjB,oDAvBF,CADF;AA2BD;;AAzCgC;;AA4CnC,eAAevB,OAAO,CACpBD,OAAO,CAACE,eAAD,EAAkB;AAAES,EAAAA,IAAI,EAAE;AAAR,CAAlB,CADa,EAEpBX,OAAO,CAACG,eAAD,EAAkB;AAAEQ,EAAAA,IAAI,EAAE;AAAR,CAAlB,CAFa,CAAP,CAGbP,UAHa,CAAf","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { graphql } from \"react-apollo\";\r\nimport compose from \"recompose/compose\";\r\nimport { getDealersQuery, addProductQuery } from \"../queries/queries\";\r\n\r\nclass AddProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      color: \"\",\r\n      category: \"\",\r\n      createdBy: \"\",\r\n    };\r\n  }\r\n  createNewProductBtn = (e) => {\r\n    console.log(this.state);\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Добавить продукт</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Введите имя\"\r\n          onChange={(e) => this.setState({ name: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Категория\"\r\n          onChange={(e) => this.setState({ category: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Цвет\"\r\n          onChange={(e) => this.setState({ color: e.target.value })}\r\n        />\r\n        <select onChange={(e) => this.setState({ createdBy: e.target.value })}>\r\n          {!this.props.getDealersQuery.loading &&\r\n            this.props.getDealersQuery.dealers.map((element) => {\r\n              return <option value={element.id}>{element.name}</option>;\r\n            })}\r\n        </select>\r\n        <button onClick={createNewProductBtn}>Создать</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  graphql(getDealersQuery, { name: \"getDealersQuery\" }),\r\n  graphql(addProductQuery, { name: \"addProductQuery\" })\r\n)(AddProduct);\r\n"]},"metadata":{},"sourceType":"module"}