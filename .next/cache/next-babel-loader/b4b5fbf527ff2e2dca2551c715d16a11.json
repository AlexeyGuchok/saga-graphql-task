{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { connect } from \"react-redux\";\nimport { productsFetchStart } from \"../redux/actions/products\";\nimport { graphql } from \"react-apollo\";\nimport { getProductsQuery, updateProductsQuery } from \"../queries/queries\";\nimport DeleteProduct from \"./deleteProduct\";\nimport ProductDetails from \"./productDetails\";\n\nvar ProductList = /*#__PURE__*/function (_Component) {\n  _inherits(ProductList, _Component);\n\n  var _super = _createSuper(ProductList);\n\n  function ProductList(props) {\n    var _this;\n\n    _classCallCheck(this, ProductList);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      selected: null\n    };\n    return _this;\n  }\n\n  _createClass(ProductList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatchProductsFetchStart();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null);\n    }\n  }]);\n\n  return ProductList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    products: state.products.products\n  };\n};\n\nvar mapDispatchToProps = {\n  dispatchProductsFetchStart: productsFetchStart\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList);","map":{"version":3,"sources":["C:/Users/lu4ok/Desktop/Practice/DZ/nextjs-app/pages/productList.js"],"names":["React","Component","gql","connect","productsFetchStart","graphql","getProductsQuery","updateProductsQuery","DeleteProduct","ProductDetails","ProductList","props","state","selected","dispatchProductsFetchStart","mapStateToProps","products","mapDispatchToProps"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,2BAAnC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,QAAsD,oBAAtD;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;IAEMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAFiB;AAKlB;;;;wCAEmB;AAClB,WAAKF,KAAL,CAAWG,0BAAX;AACD;;;6BAEQ;AAEP,aACE,kBADF;AA6CD;;;;EA3DuBb,S;;AA8D1B,IAAMc,eAAe,GAAG,SAAlBA,eAAkB,CAACH,KAAD,EAAW;AACjC,SAAO;AACLI,IAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAAN,CAAeA;AADpB,GAAP;AAGD,CAJD;;AAMA,IAAMC,kBAAkB,GAAG;AACzBH,EAAAA,0BAA0B,EAAEV;AADH,CAA3B;AAIA,eAAeD,OAAO,CAACY,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CP,WAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { connect } from \"react-redux\";\r\nimport { productsFetchStart } from \"../redux/actions/products\";\r\nimport { graphql } from \"react-apollo\";\r\nimport { getProductsQuery, updateProductsQuery } from \"../queries/queries\";\r\nimport DeleteProduct from \"./deleteProduct\";\r\nimport ProductDetails from \"./productDetails\";\r\n\r\nclass ProductList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selected: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatchProductsFetchStart();\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div>\r\n        {/* {this.props.getProductsQuery && this.props.getProductsQuery.loading ? (\r\n          <div>Загрузка...</div>\r\n        ) : (\r\n          <ul\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              flexWrap: \"wrap\",\r\n              height: \"auto\",\r\n            }}\r\n          >\r\n            {this.props.getProductsQuery.products.map((element) => {\r\n              return (\r\n                <li\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    width: \"80%\",\r\n                    margin: \"auto\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{ width: \"32%\" }}\r\n                    onClick={() => {\r\n                      this.setState({ selected: element.id });\r\n                    }}\r\n                  >\r\n                    {element.model_name}\r\n                  </div>\r\n                  <div style={{ width: \"32%\" }}>{element.model_category}</div>\r\n\r\n                  <DeleteProduct style={{ width: \"32%\" }} id={element.id} />\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        )}\r\n\r\n        {this.state.selected && (\r\n          <ProductDetails productId={this.state.selected} />\r\n        )} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    products: state.products.products,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  dispatchProductsFetchStart: productsFetchStart,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList);\r\n"]},"metadata":{},"sourceType":"module"}