{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { graphql } from \"react-apollo\";\nimport compose from \"recompose/compose\";\nimport { getProductsQuery, updateProductsQuery } from \"../queries/queries\";\nimport Button from \"@material-ui/core/Button\";\n\nvar updateProduct = /*#__PURE__*/function (_Component) {\n  _inherits(updateProduct, _Component);\n\n  var _super = _createSuper(updateProduct);\n\n  function updateProduct(props) {\n    var _this;\n\n    _classCallCheck(this, updateProduct);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      name: \"\",\n      color: \"\",\n      category: \"\",\n      createdBy: null\n    };\n    return _this;\n  }\n\n  _createClass(updateProduct, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var updateProduct = function updateProduct() {\n        var res = _this2.props.updateProductsQuery({\n          variables: {\n            id: _this2.props.id,\n            name: _this2.state.name,\n            category: _this2.state.category,\n            color: _this2.state.color,\n            createdBy: _this2.state.createdBy\n          },\n          refetchQueries: [{\n            query: getProductsQuery\n          }]\n        });\n      };\n\n      return __jsx(\"div\", null, __jsx(\"div\", null, __jsx(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u0438\\u043C\\u044F\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            name: e.target.value\n          });\n        }\n      })), __jsx(\"div\", null, __jsx(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u041D\\u043E\\u0432\\u0430\\u044F \\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            category: e.target.value\n          });\n        }\n      })), __jsx(\"div\", null, __jsx(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u0446\\u0432\\u0435\\u0442\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            color: e.target.value\n          });\n        }\n      })), __jsx(\"div\", null, __jsx(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0438\\u0442\\u0435\\u043B\\u044C\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            createdBy: Number(e.target.value)\n          });\n        }\n      })), __jsx(\"button\", {\n        onClick: updateProduct\n      }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"));\n    }\n  }]);\n\n  return updateProduct;\n}(Component);\n\nvar mapDispatchToProps = {\n  dispatchProductsAdd: productsAdd\n};\nexport default connect(null, mapDispatchToProps)(AddProduct);","map":{"version":3,"sources":["C:/Users/lu4ok/Desktop/Practice/DZ/nextjs-app/pages/updateProduct.js"],"names":["React","Component","graphql","compose","getProductsQuery","updateProductsQuery","Button","updateProduct","props","state","name","color","category","createdBy","res","variables","id","refetchQueries","query","e","setState","target","value","Number","mapDispatchToProps","dispatchProductsAdd","productsAdd","connect","AddProduct"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,QAAsD,oBAAtD;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;IAEMC,a;;;;;AACJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,SAAS,EAAE;AAJA,KAAb;AAFiB;AAQlB;;;;6BACQ;AAAA;;AACP,UAAMN,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,YAAMO,GAAG,GAAG,MAAI,CAACN,KAAL,CAAWH,mBAAX,CAA+B;AACzCU,UAAAA,SAAS,EAAE;AACTC,YAAAA,EAAE,EAAE,MAAI,CAACR,KAAL,CAAWQ,EADN;AAETN,YAAAA,IAAI,EAAE,MAAI,CAACD,KAAL,CAAWC,IAFR;AAGTE,YAAAA,QAAQ,EAAE,MAAI,CAACH,KAAL,CAAWG,QAHZ;AAITD,YAAAA,KAAK,EAAE,MAAI,CAACF,KAAL,CAAWE,KAJT;AAKTE,YAAAA,SAAS,EAAE,MAAI,CAACJ,KAAL,CAAWI;AALb,WAD8B;AAQzCI,UAAAA,cAAc,EAAE,CAAC;AAAEC,YAAAA,KAAK,EAAEd;AAAT,WAAD;AARyB,SAA/B,CAAZ;AAUD,OAXD;;AAaA,aACE,mBACE,mBACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,mDAFd;AAGE,QAAA,QAAQ,EAAE,kBAACe,CAAD;AAAA,iBAAO,MAAI,CAACC,QAAL,CAAc;AAAEV,YAAAA,IAAI,EAAES,CAAC,CAACE,MAAF,CAASC;AAAjB,WAAd,CAAP;AAAA;AAHZ,QADF,CADF,EAQE,mBACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,uFAFd;AAGE,QAAA,QAAQ,EAAE,kBAACH,CAAD;AAAA,iBAAO,MAAI,CAACC,QAAL,CAAc;AAAER,YAAAA,QAAQ,EAAEO,CAAC,CAACE,MAAF,CAASC;AAArB,WAAd,CAAP;AAAA;AAHZ,QADF,CARF,EAeE,mBACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,yDAFd;AAGE,QAAA,QAAQ,EAAE,kBAACH,CAAD;AAAA,iBAAO,MAAI,CAACC,QAAL,CAAc;AAAET,YAAAA,KAAK,EAAEQ,CAAC,CAACE,MAAF,CAASC;AAAlB,WAAd,CAAP;AAAA;AAHZ,QADF,CAfF,EAsBE,mBACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,+GAFd;AAGE,QAAA,QAAQ,EAAE,kBAACH,CAAD;AAAA,iBACR,MAAI,CAACC,QAAL,CAAc;AAAEP,YAAAA,SAAS,EAAEU,MAAM,CAACJ,CAAC,CAACE,MAAF,CAASC,KAAV;AAAnB,WAAd,CADQ;AAAA;AAHZ,QADF,CAtBF,EA+BE;AAAQ,QAAA,OAAO,EAAEf;AAAjB,kEA/BF,CADF;AAmCD;;;;EA3DyBN,S;;AA8D5B,IAAMuB,kBAAkB,GAAG;AACzBC,EAAAA,mBAAmB,EAAEC;AADI,CAA3B;AAIA,eAAeC,OAAO,CAAC,IAAD,EAAOH,kBAAP,CAAP,CAAkCI,UAAlC,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { graphql } from \"react-apollo\";\r\nimport compose from \"recompose/compose\";\r\nimport { getProductsQuery, updateProductsQuery } from \"../queries/queries\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass updateProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      color: \"\",\r\n      category: \"\",\r\n      createdBy: null,\r\n    };\r\n  }\r\n  render() {\r\n    const updateProduct = () => {\r\n      const res = this.props.updateProductsQuery({\r\n        variables: {\r\n          id: this.props.id,\r\n          name: this.state.name,\r\n          category: this.state.category,\r\n          color: this.state.color,\r\n          createdBy: this.state.createdBy,\r\n        },\r\n        refetchQueries: [{ query: getProductsQuery }],\r\n      });\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Новое имя\"\r\n            onChange={(e) => this.setState({ name: e.target.value })}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Новая Категория\"\r\n            onChange={(e) => this.setState({ category: e.target.value })}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Новый цвет\"\r\n            onChange={(e) => this.setState({ color: e.target.value })}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Новый производитель\"\r\n            onChange={(e) =>\r\n              this.setState({ createdBy: Number(e.target.value) })\r\n            }\r\n          />\r\n        </div>\r\n        <button onClick={updateProduct}>Сохранить</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  dispatchProductsAdd: productsAdd,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(AddProduct);\r\n"]},"metadata":{},"sourceType":"module"}