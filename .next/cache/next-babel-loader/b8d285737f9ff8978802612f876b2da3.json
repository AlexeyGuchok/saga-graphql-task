{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { connect } from \"redux\";\nimport { productsFetchStart } from \"../redux/actions/products\";\nimport { graphql } from \"react-apollo\";\nimport { getProductsQuery, updateProductsQuery } from \"../queries/queries\";\nimport DeleteProduct from \"./deleteProduct\";\nimport ProductDetails from \"./productDetails\";\n\nclass ProductList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: null\n    };\n  }\n\n  render() {\n    return __jsx(\"div\", null, this.props.getProductsQuery && this.props.getProductsQuery.loading ? __jsx(\"div\", null, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\") : __jsx(\"ul\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexWrap: \"wrap\",\n        height: \"auto\"\n      }\n    }, this.props.getProductsQuery.products.map(element => {\n      return __jsx(\"li\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          width: \"80%\",\n          margin: \"auto\"\n        }\n      }, __jsx(\"div\", {\n        style: {\n          width: \"32%\"\n        },\n        onClick: () => {\n          this.setState({\n            selected: element.id\n          });\n        }\n      }, element.model_name), __jsx(\"div\", {\n        style: {\n          width: \"32%\"\n        }\n      }, element.model_category), __jsx(DeleteProduct, {\n        style: {\n          width: \"32%\"\n        },\n        id: element.id\n      }));\n    })), this.state.selected && __jsx(ProductDetails, {\n      productId: this.state.selected\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = {\n  dispa: productsFetchStart\n};\nexport default ProductList;","map":{"version":3,"sources":["C:/Users/lu4ok/Desktop/Practice/DZ/nextjs-app/pages/productList.js"],"names":["React","Component","gql","connect","productsFetchStart","graphql","getProductsQuery","updateProductsQuery","DeleteProduct","ProductDetails","ProductList","constructor","props","state","selected","render","loading","display","justifyContent","flexWrap","height","products","map","element","width","margin","setState","id","model_name","model_category","mapDispatchToProps","dispa"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,kBAAT,QAAmC,2BAAnC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,QAAsD,oBAAtD;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,WAAN,SAA0BT,SAA1B,CAAoC;AAClCU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,mBACG,KAAKH,KAAL,CAAWN,gBAAX,IAA+B,KAAKM,KAAL,CAAWN,gBAAX,CAA4BU,OAA3D,GACC,yEADD,GAGC;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,cAAc,EAAE,eAFX;AAGLC,QAAAA,QAAQ,EAAE,MAHL;AAILC,QAAAA,MAAM,EAAE;AAJH;AADT,OAQG,KAAKR,KAAL,CAAWN,gBAAX,CAA4Be,QAA5B,CAAqCC,GAArC,CAA0CC,OAAD,IAAa;AACrD,aACE;AACE,QAAA,KAAK,EAAE;AACLN,UAAAA,OAAO,EAAE,MADJ;AAELC,UAAAA,cAAc,EAAE,eAFX;AAGLM,UAAAA,KAAK,EAAE,KAHF;AAILC,UAAAA,MAAM,EAAE;AAJH;AADT,SAQE;AACE,QAAA,KAAK,EAAE;AAAED,UAAAA,KAAK,EAAE;AAAT,SADT;AAEE,QAAA,OAAO,EAAE,MAAM;AACb,eAAKE,QAAL,CAAc;AAAEZ,YAAAA,QAAQ,EAAES,OAAO,CAACI;AAApB,WAAd;AACD;AAJH,SAMGJ,OAAO,CAACK,UANX,CARF,EAgBE;AAAK,QAAA,KAAK,EAAE;AAAEJ,UAAAA,KAAK,EAAE;AAAT;AAAZ,SAA+BD,OAAO,CAACM,cAAvC,CAhBF,EAkBE,MAAC,aAAD;AAAe,QAAA,KAAK,EAAE;AAAEL,UAAAA,KAAK,EAAE;AAAT,SAAtB;AAAwC,QAAA,EAAE,EAAED,OAAO,CAACI;AAApD,QAlBF,CADF;AAsBD,KAvBA,CARH,CAJJ,EAuCG,KAAKd,KAAL,CAAWC,QAAX,IACC,MAAC,cAAD;AAAgB,MAAA,SAAS,EAAE,KAAKD,KAAL,CAAWC;AAAtC,MAxCJ,CADF;AA6CD;;AAtDiC;;AAyDpC,MAAMgB,kBAAkB,GAAG;AACzBC,EAAAA,KAAK,EAAC3B;AADmB,CAA3B;AAIA,eAAeM,WAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { connect } from \"redux\";\r\nimport { productsFetchStart } from \"../redux/actions/products\";\r\nimport { graphql } from \"react-apollo\";\r\nimport { getProductsQuery, updateProductsQuery } from \"../queries/queries\";\r\nimport DeleteProduct from \"./deleteProduct\";\r\nimport ProductDetails from \"./productDetails\";\r\n\r\nclass ProductList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selected: null,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.getProductsQuery && this.props.getProductsQuery.loading ? (\r\n          <div>Загрузка...</div>\r\n        ) : (\r\n          <ul\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              flexWrap: \"wrap\",\r\n              height: \"auto\",\r\n            }}\r\n          >\r\n            {this.props.getProductsQuery.products.map((element) => {\r\n              return (\r\n                <li\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    width: \"80%\",\r\n                    margin: \"auto\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{ width: \"32%\" }}\r\n                    onClick={() => {\r\n                      this.setState({ selected: element.id });\r\n                    }}\r\n                  >\r\n                    {element.model_name}\r\n                  </div>\r\n                  <div style={{ width: \"32%\" }}>{element.model_category}</div>\r\n\r\n                  <DeleteProduct style={{ width: \"32%\" }} id={element.id} />\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        )}\r\n\r\n        {this.state.selected && (\r\n          <ProductDetails productId={this.state.selected} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  dispa:productsFetchStart\r\n}\r\n\r\nexport default ProductList;\r\n"]},"metadata":{},"sourceType":"module"}