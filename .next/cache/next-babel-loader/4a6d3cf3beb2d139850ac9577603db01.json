{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { graphql } from \"react-apollo\";\nimport Button from \"@material-ui/core/Button\";\nimport { connect } from \"react-redux\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass AddProduct extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      color: \"\",\n      category: \"\",\n      createdBy: \"\"\n    };\n  }\n\n  render() {\n    const createNewProductBtn = e => {\n      this.props.addProductQuery({\n        variables: {\n          name: this.state.name,\n          category: this.state.category,\n          color: this.state.color,\n          createdBy: +this.state.createdBy\n        },\n        refetchQueries: [{\n          query: getProductsQuery\n        }]\n      });\n    };\n\n    return __jsx(\"div\", null, __jsx(\"h3\", null, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442\"), __jsx(\"div\", null, __jsx(TextField, {\n      id: \"standard-basic\",\n      label: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043C\\u044F\",\n      type: \"text\",\n      onChange: e => this.setState({\n        name: e.target.value\n      })\n    })), __jsx(\"div\", null, __jsx(TextField, {\n      id: \"standard-basic\",\n      label: \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\",\n      onChange: e => this.setState({\n        category: e.target.value\n      })\n    })), __jsx(\"div\", null, __jsx(TextField, {\n      id: \"standard-basic\",\n      label: \"\\u0426\\u0432\\u0435\\u0442\",\n      onChange: e => this.setState({\n        color: e.target.value\n      })\n    })), __jsx(\"select\", {\n      onChange: e => this.setState({\n        createdBy: Number(e.target.value)\n      })\n    }), __jsx(\"div\", null, __jsx(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: createNewProductBtn\n    }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\")));\n  }\n\n}\n\nconst mapDispatchToProps = {\n  dispatchProductsDeleteOne: productsDeleteOne\n};\nexport default connect(null, mapDispatchToProps)(AddProduct);","map":{"version":3,"sources":["C:/Users/lu4ok/Desktop/Practice/DZ/nextjs-app/pages/addProduct.js"],"names":["React","Component","graphql","Button","connect","TextField","AddProduct","constructor","props","state","name","color","category","createdBy","render","createNewProductBtn","e","addProductQuery","variables","refetchQueries","query","getProductsQuery","setState","target","value","Number","mapDispatchToProps","dispatchProductsDeleteOne","productsDeleteOne"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AACjCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,SAAS,EAAE;AAJA,KAAb;AAMD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,mBAAmB,GAAIC,CAAD,IAAO;AACjC,WAAKR,KAAL,CAAWS,eAAX,CAA2B;AACzBC,QAAAA,SAAS,EAAE;AACTR,UAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IADR;AAETE,UAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG,QAFZ;AAGTD,UAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAHT;AAITE,UAAAA,SAAS,EAAE,CAAC,KAAKJ,KAAL,CAAWI;AAJd,SADc;AAOzBM,QAAAA,cAAc,EAAE,CAAC;AAAEC,UAAAA,KAAK,EAAEC;AAAT,SAAD;AAPS,OAA3B;AASD,KAVD;;AAYA,WACE,mBACE,gHADF,EAEE,mBACE,MAAC,SAAD;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,KAAK,EAAC,+DAFR;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,QAAQ,EAAGL,CAAD,IAAO,KAAKM,QAAL,CAAc;AAAEZ,QAAAA,IAAI,EAAEM,CAAC,CAACO,MAAF,CAASC;AAAjB,OAAd;AAJnB,MADF,CAFF,EAUE,mBACE,MAAC,SAAD;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,KAAK,EAAC,wDAFR;AAGE,MAAA,QAAQ,EAAGR,CAAD,IAAO,KAAKM,QAAL,CAAc;AAAEV,QAAAA,QAAQ,EAAEI,CAAC,CAACO,MAAF,CAASC;AAArB,OAAd;AAHnB,MADF,CAVF,EAiBE,mBACE,MAAC,SAAD;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,KAAK,EAAC,0BAFR;AAGE,MAAA,QAAQ,EAAGR,CAAD,IAAO,KAAKM,QAAL,CAAc;AAAEX,QAAAA,KAAK,EAAEK,CAAC,CAACO,MAAF,CAASC;AAAlB,OAAd;AAHnB,MADF,CAjBF,EAwBE;AACE,MAAA,QAAQ,EAAGR,CAAD,IAAO,KAAKM,QAAL,CAAc;AAAET,QAAAA,SAAS,EAAEY,MAAM,CAACT,CAAC,CAACO,MAAF,CAASC,KAAV;AAAnB,OAAd;AADnB,MAxBF,EAiCE,mBACE,MAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,OAAO,EAAET;AAHX,oDADF,CAjCF,CADF;AA6CD;;AArEgC;;AAwEnC,MAAMW,kBAAkB,GAAG;AACzBC,EAAAA,yBAAyB,EAAEC;AADF,CAA3B;AAIA,eAAexB,OAAO,CAAC,IAAD,EAAOsB,kBAAP,CAAP,CAAkCpB,UAAlC,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { graphql } from \"react-apollo\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nclass AddProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      color: \"\",\r\n      category: \"\",\r\n      createdBy: \"\",\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const createNewProductBtn = (e) => {\r\n      this.props.addProductQuery({\r\n        variables: {\r\n          name: this.state.name,\r\n          category: this.state.category,\r\n          color: this.state.color,\r\n          createdBy: +this.state.createdBy,\r\n        },\r\n        refetchQueries: [{ query: getProductsQuery }],\r\n      });\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h3>Добавить продукт</h3>\r\n        <div>\r\n          <TextField\r\n            id=\"standard-basic\"\r\n            label=\"Введите имя\"\r\n            type=\"text\"\r\n            onChange={(e) => this.setState({ name: e.target.value })}\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            id=\"standard-basic\"\r\n            label=\"Категория\"\r\n            onChange={(e) => this.setState({ category: e.target.value })}\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            id=\"standard-basic\"\r\n            label=\"Цвет\"\r\n            onChange={(e) => this.setState({ color: e.target.value })}\r\n          />\r\n        </div>\r\n        <select\r\n          onChange={(e) => this.setState({ createdBy: Number(e.target.value) })}\r\n        >\r\n          {/* {!this.props.getDealersQuery.loading &&\r\n            this.props.getDealersQuery.dealers.map((element) => {\r\n              return <option value={element.id}>{element.name}</option>;\r\n            })} */}\r\n        </select>\r\n\r\n        <div>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={createNewProductBtn}\r\n          >\r\n            Создать\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  dispatchProductsDeleteOne: productsDeleteOne,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(AddProduct);\r\n"]},"metadata":{},"sourceType":"module"}