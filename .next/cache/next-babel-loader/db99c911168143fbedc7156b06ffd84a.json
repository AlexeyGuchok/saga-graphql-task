{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getProducts),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(saga);\n\nimport ProductsService from \"../../services/products\";\nimport { call, put, takeEvery, select, all, take, takeLatest } from \"redux-saga/effects\";\nimport actionTypes from \"../constants\";\nimport { productsFetchSuccess, productsFetchError, productsDeleteOne } from \"../actions/products\";\n\nfunction getProducts(action) {\n  var data;\n  return _regeneratorRuntime.wrap(function getProducts$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(ProductsService.getProductsQuery);\n\n        case 3:\n          data = _context.sent;\n          _context.next = 6;\n          return put(productsFetchSuccess({\n            products: data.data.products\n          }));\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put(productsFetchError(_context.t0));\n\n        case 12:\n          console.log(_context.t0);\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nexport function saga() {\n  return _regeneratorRuntime.wrap(function saga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return all([takeLatest(actionTypes.PRODUCTS_FETCH_START, getProducts)]);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["C:/Users/lu4ok/Desktop/Practice/DZ/nextjs-app/redux/sagas/products.js"],"names":["getProducts","saga","ProductsService","call","put","takeEvery","select","all","take","takeLatest","actionTypes","productsFetchSuccess","productsFetchError","productsDeleteOne","action","getProductsQuery","data","products","console","log","PRODUCTS_FETCH_START"],"mappings":";;oDAiBUA,W;qDAUOC,I;;AA3BjB,OAAOC,eAAP,MAA4B,yBAA5B;AACA,SACEC,IADF,EAEEC,GAFF,EAGEC,SAHF,EAIEC,MAJF,EAKEC,GALF,EAMEC,IANF,EAOEC,UAPF,QAQO,oBARP;AASA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SACEC,oBADF,EAEEC,kBAFF,EAGEC,iBAHF,QAIO,qBAJP;;AAMA,SAAUb,WAAV,CAAsBc,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEiB,iBAAMX,IAAI,CAACD,eAAe,CAACa,gBAAjB,CAAV;;AAFjB;AAEUC,UAAAA,IAFV;AAAA;AAGI,iBAAMZ,GAAG,CAACO,oBAAoB,CAAC;AAAEM,YAAAA,QAAQ,EAAED,IAAI,CAACA,IAAL,CAAUC;AAAtB,WAAD,CAArB,CAAT;;AAHJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKI,iBAAMb,GAAG,CAACQ,kBAAkB,aAAnB,CAAT;;AALJ;AAMIM,UAAAA,OAAO,CAACC,GAAR;;AANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,OAAO,SAAUlB,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAMM,GAAG,CAAC,CAACE,UAAU,CAACC,WAAW,CAACU,oBAAb,EAAmCpB,WAAnC,CAAX,CAAD,CAAT;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import ProductsService from \"../../services/products\";\r\nimport {\r\n  call,\r\n  put,\r\n  takeEvery,\r\n  select,\r\n  all,\r\n  take,\r\n  takeLatest,\r\n} from \"redux-saga/effects\";\r\nimport actionTypes from \"../constants\";\r\nimport {\r\n  productsFetchSuccess,\r\n  productsFetchError,\r\n  productsDeleteOne,\r\n} from \"../actions/products\";\r\n\r\nfunction* getProducts(action) {\r\n  try {\r\n    const data = yield call(ProductsService.getProductsQuery);\r\n    yield put(productsFetchSuccess({ products: data.data.products }));\r\n  } catch (error) {\r\n    yield put(productsFetchError(error));\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport function* saga() {\r\n  yield all([takeLatest(actionTypes.PRODUCTS_FETCH_START, getProducts)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}