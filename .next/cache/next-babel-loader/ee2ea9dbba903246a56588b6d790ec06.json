{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { productsUpdate } from \"../redux/actions/products\";\nimport Button from \"@material-ui/core/Button\";\n\nclass UpdateProduct extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: null,\n      name: \"\",\n      color: \"\",\n      category: \"\",\n      createdBy: null\n    };\n  }\n\n  render() {\n    const updateProduct = () => {\n      this.props.dispatchProductsUpdate(this.state);\n    };\n\n    return __jsx(\"div\", null, __jsx(\"div\", null, __jsx(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u0438\\u043C\\u044F\",\n      onChange: e => this.setState({\n        name: e.target.value\n      })\n    })), __jsx(\"div\", null, __jsx(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u041D\\u043E\\u0432\\u0430\\u044F \\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\",\n      onChange: e => this.setState({\n        category: e.target.value\n      })\n    })), __jsx(\"div\", null, __jsx(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u0446\\u0432\\u0435\\u0442\",\n      onChange: e => this.setState({\n        color: e.target.value\n      })\n    })), __jsx(\"div\", null, __jsx(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0438\\u0442\\u0435\\u043B\\u044C\",\n      onChange: e => this.setState({\n        createdBy: Number(e.target.value)\n      })\n    })), __jsx(\"button\", {\n      onClick: updateProduct\n    }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"));\n  }\n\n}\n\nconst mapDispatchToProps = {\n  dispatchProductsUpdate: productsUpdate\n};\nexport default connect(null, mapDispatchToProps)(UpdateProduct);","map":{"version":3,"sources":["C:/Users/lu4ok/Desktop/Practice/DZ/nextjs-app/pages/updateProduct.js"],"names":["React","Component","connect","productsUpdate","Button","UpdateProduct","constructor","props","state","id","name","color","category","createdBy","render","updateProduct","dispatchProductsUpdate","e","setState","target","value","Number","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AACpCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,EAAE,EAAE,IADO;AAEXC,MAAAA,IAAI,EAAE,EAFK;AAGXC,MAAAA,KAAK,EAAE,EAHI;AAIXC,MAAAA,QAAQ,EAAE,EAJC;AAKXC,MAAAA,SAAS,EAAE;AALA,KAAb;AAOD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAMC,aAAa,GAAG,MAAM;AAE1B,WAAKR,KAAL,CAAWS,sBAAX,CAAkC,KAAKR,KAAvC;AACD,KAHD;;AAKA,WACE,mBACE,mBACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,mDAFd;AAGE,MAAA,QAAQ,EAAGS,CAAD,IAAO,KAAKC,QAAL,CAAc;AAAER,QAAAA,IAAI,EAAEO,CAAC,CAACE,MAAF,CAASC;AAAjB,OAAd;AAHnB,MADF,CADF,EAQE,mBACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,uFAFd;AAGE,MAAA,QAAQ,EAAGH,CAAD,IAAO,KAAKC,QAAL,CAAc;AAAEN,QAAAA,QAAQ,EAAEK,CAAC,CAACE,MAAF,CAASC;AAArB,OAAd;AAHnB,MADF,CARF,EAeE,mBACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,yDAFd;AAGE,MAAA,QAAQ,EAAGH,CAAD,IAAO,KAAKC,QAAL,CAAc;AAAEP,QAAAA,KAAK,EAAEM,CAAC,CAACE,MAAF,CAASC;AAAlB,OAAd;AAHnB,MADF,CAfF,EAsBE,mBACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,+GAFd;AAGE,MAAA,QAAQ,EAAGH,CAAD,IACR,KAAKC,QAAL,CAAc;AAAEL,QAAAA,SAAS,EAAEQ,MAAM,CAACJ,CAAC,CAACE,MAAF,CAASC,KAAV;AAAnB,OAAd;AAJJ,MADF,CAtBF,EA+BE;AAAQ,MAAA,OAAO,EAAEL;AAAjB,gEA/BF,CADF;AAmCD;;AApDmC;;AAuDtC,MAAMO,kBAAkB,GAAG;AACzBN,EAAAA,sBAAsB,EAAEb;AADC,CAA3B;AAIA,eAAeD,OAAO,CAAC,IAAD,EAAOoB,kBAAP,CAAP,CAAkCjB,aAAlC,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { productsUpdate } from \"../redux/actions/products\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass UpdateProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: null,\r\n      name: \"\",\r\n      color: \"\",\r\n      category: \"\",\r\n      createdBy: null,\r\n    };\r\n  }\r\n  render() {\r\n    const updateProduct = () => {\r\n      \r\n      this.props.dispatchProductsUpdate(this.state);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Новое имя\"\r\n            onChange={(e) => this.setState({ name: e.target.value })}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Новая Категория\"\r\n            onChange={(e) => this.setState({ category: e.target.value })}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Новый цвет\"\r\n            onChange={(e) => this.setState({ color: e.target.value })}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Новый производитель\"\r\n            onChange={(e) =>\r\n              this.setState({ createdBy: Number(e.target.value) })\r\n            }\r\n          />\r\n        </div>\r\n        <button onClick={updateProduct}>Сохранить</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  dispatchProductsUpdate: productsUpdate,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(UpdateProduct);\r\n"]},"metadata":{},"sourceType":"module"}