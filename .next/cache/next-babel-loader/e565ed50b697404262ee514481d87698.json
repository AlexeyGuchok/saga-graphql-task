{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from \"react\";\nimport Head from \"next/head\";\nimport AboutLayout from \"../components/layouts/aboutLayout\";\nimport { gql } from \"apollo-boost\";\nimport { graphql } from \"react-apollo\";\nimport { ApolloProvider } from \"react-apollo\"; // import styles from \"./style.module.scss\";\n\nconst productsQuery = gql`\n  query productsQuery {\n    products {\n      id\n      model_name\n      model_color\n      model_category\n    }\n  }\n`;\n\nasync function fetchAPI() {\n  try {\n    const response = await fetch(\"http://localhost:4001/api/shows\", {\n      method: \"GET\",\n      headers: {}\n    });\n    const data = await response.json();\n    return data;\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nlet AboutPage = ({\n  serverData\n}) => {\n  const {\n    0: data,\n    1: setData\n  } = useState(null); // useEffect(() => {\n  //   const fetchAndSet = async () => {\n  //     const data = await fetchAPI();\n  //     setData(data);\n  //   };\n  //   fetchAPI();\n  // }, []);\n\n  const client = new ApolloClient({\n    uri: \"http://localhost:4001/graphql\"\n  });\n  return __jsx(ApolloProvider, {\n    client: client\n  }, __jsx(\"section\", null, __jsx(Head, null, __jsx(\"title\", null, \"\\u041E \\u043D\\u0430\\u0441\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"Buy beautiful, high quality carpets for your home.\"\n  })), __jsx(AboutLayout, {\n    data: data || serverData\n  })));\n};\n\nAboutPage.getInitialProps = async context => {\n  const data = await fetchAPI();\n  return {\n    serverData: data\n  };\n};\n\nAboutPage = graphql(productsQuery)(AboutPage);\nexport default AboutPage;","map":{"version":3,"sources":["C:/Users/lu4ok/Desktop/Practice/DZ/nextjs-app/pages/about.js"],"names":["React","useState","useEffect","useContext","Head","AboutLayout","gql","graphql","ApolloProvider","productsQuery","fetchAPI","response","fetch","method","headers","data","json","e","console","log","AboutPage","serverData","setData","client","ApolloClient","uri","getInitialProps","context"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,cAAT,QAA+B,cAA/B,C,CACA;;AAEA,MAAMC,aAAa,GAAGH,GAAI;;;;;;;;;CAA1B;;AAWA,eAAeI,QAAf,GAA0B;AACxB,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,EAAoC;AAC9DC,MAAAA,MAAM,EAAE,KADsD;AAE9DC,MAAAA,OAAO,EAAE;AAFqD,KAApC,CAA5B;AAKA,UAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACA,WAAOD,IAAP;AACD,GARD,CAQE,OAAOE,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF;;AAED,IAAIG,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAClC,QAAM;AAAA,OAACN,IAAD;AAAA,OAAOO;AAAP,MAAkBrB,QAAQ,CAAC,IAAD,CAAhC,CADkC,CAGlC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMsB,MAAM,GAAG,IAAIC,YAAJ,CAAiB;AAC9BC,IAAAA,GAAG,EAAE;AADyB,GAAjB,CAAf;AAIA,SACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEF;AAAxB,KACE,uBACE,MAAC,IAAD,QACE,iDADF,EAEE;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,OAAO,EAAC;AAFV,IAFF,CADF,EAQE,MAAC,WAAD;AAAa,IAAA,IAAI,EAAER,IAAI,IAAIM;AAA3B,IARF,CADF,CADF;AAcD,CA7BD;;AA+BAD,SAAS,CAACM,eAAV,GAA4B,MAAOC,OAAP,IAAmB;AAC7C,QAAMZ,IAAI,GAAG,MAAML,QAAQ,EAA3B;AACA,SAAO;AAAEW,IAAAA,UAAU,EAAEN;AAAd,GAAP;AACD,CAHD;;AAIAK,SAAS,GAAGb,OAAO,CAACE,aAAD,CAAP,CAAuBW,SAAvB,CAAZ;AACA,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport Head from \"next/head\";\r\nimport AboutLayout from \"../components/layouts/aboutLayout\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { graphql } from \"react-apollo\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\n// import styles from \"./style.module.scss\";\r\n\r\nconst productsQuery = gql`\r\n  query productsQuery {\r\n    products {\r\n      id\r\n      model_name\r\n      model_color\r\n      model_category\r\n    }\r\n  }\r\n`;\r\n\r\nasync function fetchAPI() {\r\n  try {\r\n    const response = await fetch(\"http://localhost:4001/api/shows\", {\r\n      method: \"GET\",\r\n      headers: {},\r\n    });\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nlet AboutPage = ({ serverData }) => {\r\n  const [data, setData] = useState(null);\r\n\r\n  // useEffect(() => {\r\n  //   const fetchAndSet = async () => {\r\n  //     const data = await fetchAPI();\r\n  //     setData(data);\r\n  //   };\r\n  //   fetchAPI();\r\n  // }, []);\r\n\r\n  const client = new ApolloClient({\r\n    uri: \"http://localhost:4001/graphql\",\r\n  });\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <section>\r\n        <Head>\r\n          <title>О нас</title>\r\n          <meta\r\n            name=\"description\"\r\n            content=\"Buy beautiful, high quality carpets for your home.\"\r\n          />\r\n        </Head>\r\n        <AboutLayout data={data || serverData} />\r\n      </section>\r\n    </ApolloProvider>\r\n  );\r\n};\r\n\r\nAboutPage.getInitialProps = async (context) => {\r\n  const data = await fetchAPI();\r\n  return { serverData: data };\r\n};\r\nAboutPage = graphql(productsQuery)(AboutPage);\r\nexport default AboutPage;\r\n"]},"metadata":{},"sourceType":"module"}