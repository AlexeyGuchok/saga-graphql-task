{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport axios from \"axios\";\nvar graphQLUrl = \"/graphql\";\n\nvar ProductsService = function ProductsService(url) {\n  var _this = this;\n\n  _classCallCheck(this, ProductsService);\n\n  _defineProperty(this, \"getProductsQuery\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _this.sender.post(\"\", {\n              query: \"{\\n            products {\\n              id\\n              model_name\\n              model_color\\n              model_category\\n              createdBy {\\n                id\\n                name\\n                age\\n              }\\n            }\\n          }\"\n            });\n\n          case 2:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })));\n\n  _defineProperty(this, \"deleteProductQuery\", /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n      var name, data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              name = \"deleteProduct\";\n              _context2.next = 3;\n              return _this.sender.post(\"\", {\n                query: \"\\n        mutation {\\n          \".concat(name, \"(id: \").concat(id, \") {\\n            id\\n          }\\n      }\\n    \")\n              });\n\n            case 3:\n              data = _context2.sent;\n              return _context2.abrupt(\"return\", data);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"addProductQuery\", /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(userData) {\n      var name, data;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              name = \"addProduct\";\n              _context3.next = 3;\n              return _this.sender.post(\"\", {\n                query: \"\\n        mutation {\\n          \".concat(name, \"(\\n            name: \\\"\").concat(userData.name, \"\\\",\\n            category: \\\"\").concat(userData.category, \"\\\",\\n            color: \\\"\").concat(userData.color, \"\\\",\\n            createdBy: \\\"\").concat(userData.createdBy, \"\\\",\\n            ) {\\n             model_name\\n            }\\n      }\\n    \")\n              });\n\n            case 3:\n              data = _context3.sent;\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }());\n\n  this.sender = axios.create({\n    baseURL: url,\n    withCredentials: true\n  });\n} //   registerByEmail = async ({ email, password }) => {\n//     const name = \"userCreateEmail\";\n//     const res = await this.sender.post(\"\", {\n//       query: `mutation {\n//         ${name} (email: \"${email}\", password: \"${password}\")\n//       }`,\n//     });\n//     return {\n//       email,\n//     };\n//   };\n//   loginByEmail = async ({ email, password }) => {\n//     const name = \"loginUserByEmail\";\n//     const res = await this.sender.post(\"\", {\n//       query: `{ ${name}(email: \"${email}\", password: \"${password}\") }`,\n//     });\n//     return {\n//       email,\n//     };\n//   };\n;\n\nexport default new ProductsService(graphQLUrl);","map":{"version":3,"sources":["C:/Users/lu4ok/Desktop/Practice/DZ/nextjs-app/services/products.js"],"names":["axios","graphQLUrl","ProductsService","url","sender","post","query","data","id","name","userData","category","color","createdBy","create","baseURL","withCredentials"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAMC,UAAU,GAAG,UAAnB;;IAEMC,e,GACJ,yBAAYC,GAAZ,EAAiB;AAAA;;AAAA;;AAAA,kHAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,KAAI,CAACC,MAAL,CAAYC,IAAZ,CAAiB,EAAjB,EAAqB;AACtCC,cAAAA,KAAK;AADiC,aAArB,CADF;;AAAA;AACXC,YAAAA,IADW;AAAA,6CAgBVA,IAAI,CAACA,IAhBK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAPF;;AAAA;AAAA,yEA0BI,kBAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,cAAAA,IADa,GACN,eADM;AAAA;AAAA,qBAEA,KAAI,CAACL,MAAL,CAAYC,IAAZ,CAAiB,EAAjB,EAAqB;AACtCC,gBAAAA,KAAK,4CAECG,IAFD,kBAEaD,EAFb;AADiC,eAArB,CAFA;;AAAA;AAEbD,cAAAA,IAFa;AAAA,gDAWZA,IAXY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA1BJ;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,yEAwCC,kBAAOG,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACVD,cAAAA,IADU,GACH,YADG;AAAA;AAAA,qBAEG,KAAI,CAACL,MAAL,CAAYC,IAAZ,CAAiB,EAAjB,EAAqB;AACtCC,gBAAAA,KAAK,4CAECG,IAFD,oCAGUC,QAAQ,CAACD,IAHnB,0CAIcC,QAAQ,CAACC,QAJvB,uCAKWD,QAAQ,CAACE,KALpB,2CAMeF,QAAQ,CAACG,SANxB;AADiC,eAArB,CAFH;;AAAA;AAEVN,cAAAA,IAFU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAxCD;;AAAA;AAAA;AAAA;AAAA;;AACf,OAAKH,MAAL,GAAcJ,KAAK,CAACc,MAAN,CAAa;AACzBC,IAAAA,OAAO,EAAEZ,GADgB;AAEzBa,IAAAA,eAAe,EAAE;AAFQ,GAAb,CAAd;AAID,C,CAuDD;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAGF,eAAe,IAAId,eAAJ,CAAoBD,UAApB,CAAf","sourcesContent":["import axios from \"axios\";\r\nconst graphQLUrl = \"/graphql\";\r\n\r\nclass ProductsService {\r\n  constructor(url) {\r\n    this.sender = axios.create({\r\n      baseURL: url,\r\n      withCredentials: true,\r\n    });\r\n  }\r\n\r\n  getProductsQuery = async () => {\r\n    const data = await this.sender.post(\"\", {\r\n      query: `{\r\n            products {\r\n              id\r\n              model_name\r\n              model_color\r\n              model_category\r\n              createdBy {\r\n                id\r\n                name\r\n                age\r\n              }\r\n            }\r\n          }`,\r\n    });\r\n    return data.data;\r\n  };\r\n\r\n  deleteProductQuery = async (id) => {\r\n    const name = \"deleteProduct\";\r\n    const data = await this.sender.post(\"\", {\r\n      query: `\r\n        mutation {\r\n          ${name}(id: ${id}) {\r\n            id\r\n          }\r\n      }\r\n    `,\r\n    });\r\n    return data;\r\n  };\r\n\r\n  addProductQuery = async (userData) => {\r\n    const name = \"addProduct\";\r\n    const data = await this.sender.post(\"\", {\r\n      query: `\r\n        mutation {\r\n          ${name}(\r\n            name: \"${userData.name}\",\r\n            category: \"${userData.category}\",\r\n            color: \"${userData.color}\",\r\n            createdBy: \"${userData.createdBy}\",\r\n            ) {\r\n             model_name\r\n            }\r\n      }\r\n    `,\r\n    });\r\n    // console.log(data);\r\n    // return data;\r\n  };\r\n\r\n  //   registerByEmail = async ({ email, password }) => {\r\n  //     const name = \"userCreateEmail\";\r\n  //     const res = await this.sender.post(\"\", {\r\n  //       query: `mutation {\r\n  //         ${name} (email: \"${email}\", password: \"${password}\")\r\n  //       }`,\r\n  //     });\r\n\r\n  //     return {\r\n  //       email,\r\n  //     };\r\n  //   };\r\n\r\n  //   loginByEmail = async ({ email, password }) => {\r\n  //     const name = \"loginUserByEmail\";\r\n\r\n  //     const res = await this.sender.post(\"\", {\r\n  //       query: `{ ${name}(email: \"${email}\", password: \"${password}\") }`,\r\n  //     });\r\n\r\n  //     return {\r\n  //       email,\r\n  //     };\r\n  //   };\r\n}\r\n\r\nexport default new ProductsService(graphQLUrl);\r\n"]},"metadata":{},"sourceType":"module"}