{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component, useEffect, useState } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { graphql } from \"react-apollo\";\nimport compose from \"recompose/compose\";\nimport { getDealersQuery, addProductQuery } from \"../queries/queries\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass AddProduct extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      color: \"\",\n      category: \"\",\n      createdBy: \"\"\n    };\n  }\n\n  render() {\n    const createNewProductBtn = e => {\n      this.props.addProductQuery({\n        variables: {\n          name: this.state.name,\n          category: this.state.category,\n          color: this.state.color,\n          createdBy: +this.state.createdBy\n        }\n      });\n    };\n\n    return __jsx(\"div\", null, __jsx(\"h2\", null, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442\"), __jsx(TextField, {\n      id: \"standard-basic\",\n      label: \"Standard\",\n      type: \"text\",\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043C\\u044F\",\n      onChange: e => this.setState({\n        name: e.target.value\n      })\n    }), __jsx(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\",\n      onChange: e => this.setState({\n        category: e.target.value\n      })\n    }), __jsx(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u0426\\u0432\\u0435\\u0442\",\n      onChange: e => this.setState({\n        color: e.target.value\n      })\n    }), __jsx(\"select\", {\n      onChange: e => this.setState({\n        createdBy: Number(e.target.value)\n      })\n    }, !this.props.getDealersQuery.loading && this.props.getDealersQuery.dealers.map(element => {\n      return __jsx(\"option\", {\n        value: element.id\n      }, element.name);\n    })), __jsx(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: createNewProductBtn\n    }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\"));\n  }\n\n}\n\nexport default compose(graphql(getDealersQuery, {\n  name: \"getDealersQuery\"\n}), graphql(addProductQuery, {\n  name: \"addProductQuery\"\n}))(AddProduct);","map":{"version":3,"sources":["C:/Users/lu4ok/Desktop/Practice/DZ/nextjs-app/pages/addProduct.js"],"names":["React","Component","useEffect","useState","gql","graphql","compose","getDealersQuery","addProductQuery","Button","TextField","AddProduct","constructor","props","state","name","color","category","createdBy","render","createNewProductBtn","e","variables","setState","target","value","Number","loading","dealers","map","element","id"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { graphql } from \"react-apollo\";\r\nimport compose from \"recompose/compose\";\r\nimport { getDealersQuery, addProductQuery } from \"../queries/queries\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nclass AddProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      color: \"\",\r\n      category: \"\",\r\n      createdBy: \"\",\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const createNewProductBtn = (e) => {\r\n      this.props.addProductQuery({\r\n        variables: {\r\n          name: this.state.name,\r\n          category: this.state.category,\r\n          color: this.state.color,\r\n          createdBy: +this.state.createdBy,\r\n        },\r\n      });\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h2>Добавить продукт</h2>\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          label=\"Standard\"\r\n          type=\"text\"\r\n          placeholder=\"Введите имя\"\r\n          onChange={(e) => this.setState({ name: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Категория\"\r\n          onChange={(e) => this.setState({ category: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Цвет\"\r\n          onChange={(e) => this.setState({ color: e.target.value })}\r\n        />\r\n        <select\r\n          onChange={(e) => this.setState({ createdBy: Number(e.target.value) })}\r\n        >\r\n          {!this.props.getDealersQuery.loading &&\r\n            this.props.getDealersQuery.dealers.map((element) => {\r\n              return <option value={element.id}>{element.name}</option>;\r\n            })}\r\n        </select>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={createNewProductBtn}\r\n        >\r\n          Создать\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  graphql(getDealersQuery, { name: \"getDealersQuery\" }),\r\n  graphql(addProductQuery, { name: \"addProductQuery\" })\r\n)(AddProduct);\r\n"]},"metadata":{},"sourceType":"module"}